// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import common "github.com/opencontrol/compliance-masonry/pkg/lib/common"
import mock "github.com/stretchr/testify/mock"
import semver "github.com/blang/semver"

// Component is an autogenerated mock type for the Component type
type Component struct {
	mock.Mock
}

// GetAllSatisfies provides a mock function with given fields:
func (_m *Component) GetAllSatisfies() []common.Satisfies {
	ret := _m.Called()

	var r0 []common.Satisfies
	if rf, ok := ret.Get(0).(func() []common.Satisfies); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]common.Satisfies)
		}
	}

	return r0
}

// GetKey provides a mock function with given fields:
func (_m *Component) GetKey() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetName provides a mock function with given fields:
func (_m *Component) GetName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetReferences provides a mock function with given fields:
func (_m *Component) GetReferences() *common.GeneralReferences {
	ret := _m.Called()

	var r0 *common.GeneralReferences
	if rf, ok := ret.Get(0).(func() *common.GeneralReferences); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*common.GeneralReferences)
		}
	}

	return r0
}

// GetResponsibleRole provides a mock function with given fields:
func (_m *Component) GetResponsibleRole() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetVerifications provides a mock function with given fields:
func (_m *Component) GetVerifications() *common.VerificationReferences {
	ret := _m.Called()

	var r0 *common.VerificationReferences
	if rf, ok := ret.Get(0).(func() *common.VerificationReferences); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*common.VerificationReferences)
		}
	}

	return r0
}

// GetVersion provides a mock function with given fields:
func (_m *Component) GetVersion() semver.Version {
	ret := _m.Called()

	var r0 semver.Version
	if rf, ok := ret.Get(0).(func() semver.Version); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(semver.Version)
	}

	return r0
}

// SetKey provides a mock function with given fields: _a0
func (_m *Component) SetKey(_a0 string) {
	_m.Called(_a0)
}

// SetVersion provides a mock function with given fields: _a0
func (_m *Component) SetVersion(_a0 semver.Version) {
	_m.Called(_a0)
}
