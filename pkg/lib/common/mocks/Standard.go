package mocks

import common "github.com/opencontrol/compliance-masonry/pkg/lib/common"
import mock "github.com/stretchr/testify/mock"

// Standard is an autogenerated mock type for the Standard type
type Standard struct {
	mock.Mock
}

// GetControl provides a mock function with given fields: _a0
func (_m *Standard) GetControl(_a0 string) common.Control {
	ret := _m.Called(_a0)

	var r0 common.Control
	if rf, ok := ret.Get(0).(func(string) common.Control); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(common.Control)
		}
	}

	return r0
}

// GetControls provides a mock function with given fields:
func (_m *Standard) GetControls() map[string]common.Control {
	ret := _m.Called()

	var r0 map[string]common.Control
	if rf, ok := ret.Get(0).(func() map[string]common.Control); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]common.Control)
		}
	}

	return r0
}

// GetName provides a mock function with given fields:
func (_m *Standard) GetName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetSortedControls provides a mock function with given fields:
func (_m *Standard) GetSortedControls() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

var _ common.Standard = (*Standard)(nil)
